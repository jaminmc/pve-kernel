diff -u a/security/apparmor/af_inet.c b/security/apparmor/af_inet.c
--- a/security/apparmor/af_inet.c	2025-10-03 08:45:21.349279586 +0000
+++ b/security/apparmor/af_inet.c	2025-10-03 09:09:50.937549219 +0000
@@ -738,7 +738,7 @@
 	/* do we need early bailout for !family ... */
 	return sk_has_perm2(sock->sk, op, request, profile, ad,
 			    map_sock_addr(sock, ADDR_LOCAL, &laddr, &ad),
-			    map_addr(msg->msg_name, msg->msg_namelen, 0,
+			    map_addr(msg->msg_namelen == 0 ? NULL : msg->msg_name, msg->msg_namelen, 0,
 				     ADDR_REMOTE, &raddr, &ad),
 			    profile_remote_perm(profile, sock->sk, request,
 						&raddr, &laddr.maddr, &ad));
diff -u a/security/apparmor/af_unix.c b/security/apparmor/af_unix.c
--- a/security/apparmor/af_unix.c	2025-10-03 08:45:21.349374037 +0000
+++ b/security/apparmor/af_unix.c	2025-10-03 09:09:50.937549219 +0000
@@ -607,7 +607,7 @@
 		struct aa_profile *profile;
 		DEFINE_AUDIT_SK(ad, op, subj_cred, sk);
 
-		ad.net.peer_sk = peer_sk;
+		ad.net.peer.addr = peer_sk;
 
 		return fn_for_each_confined(label, profile,
 				profile_peer_perm(profile, request, sk,
diff -u a/security/apparmor/apparmorfs.c b/security/apparmor/apparmorfs.c
--- a/security/apparmor/apparmorfs.c	2025-10-03 08:45:21.349625239 +0000
+++ b/security/apparmor/apparmorfs.c	2025-10-03 09:31:00.174931700 +0000
@@ -28,6 +28,7 @@
 
 #include "include/apparmor.h"
 #include "include/apparmorfs.h"
+#include "include/notify.h"
 #include "include/audit.h"
 #include "include/cred.h"
 #include "include/crypto.h"
@@ -285,7 +286,7 @@
 	dir = d_inode(parent);
 
 	inode_lock(dir);
-	dentry = lookup_one_len(name, parent, strlen(name));
+	dentry = lookup_one(&nop_mnt_idmap, &QSTR_LEN(name, strlen(name)), parent);
 	if (IS_ERR(dentry)) {
 		error = PTR_ERR(dentry);
 		goto fail_lock;
@@ -687,8 +688,10 @@
 		}
 		listener->filter = dfa;
 	}
-	if (!aa_register_listener_proxy(listener, ns))
+	if (!aa_register_listener_proxy(listener, ns)) {
 		ret = -ENOMEM;
+		goto out;
+	}
 
 out:
 	kfree(unotif);
@@ -706,7 +709,7 @@
 	if (copy_from_user(&max_size, buf, sizeof(max_size)))
 		return -EFAULT;
 	/* size check handled by individual message handlers */
-	return aa_listener_unotif_recv(listener, buf, max_size);
+	return aa_listener_unotif_recv(listener, buf, max_size, 1);
 }
 
 static long notify_user_response(struct aa_listener *listener,
@@ -2030,8 +2033,8 @@
 	return error;
 }
 
-static int ns_mkdir_op(struct mnt_idmap *idmap, struct inode *dir,
-		       struct dentry *dentry, umode_t mode)
+static struct dentry *ns_mkdir_op(struct mnt_idmap *idmap, struct inode *dir,
+				  struct dentry *dentry, umode_t mode)
 {
 	struct aa_ns *ns, *parent;
 	/* TODO: improve permission check */
@@ -2043,7 +2046,7 @@
 				     AA_MAY_LOAD_POLICY);
 	end_current_label_crit_section(label);
 	if (error)
-		return error;
+		return ERR_PTR(error);
 
 	parent = aa_get_ns(dir->i_private);
 	AA_BUG(d_inode(ns_subns_dir(parent)) != dir);
@@ -2078,7 +2081,7 @@
 	mutex_unlock(&parent->lock);
 	aa_put_ns(parent);
 
-	return error;
+	return error ? ERR_PTR(error) : dentry;
 }
 
 static int ns_rmdir_op(struct inode *dir, struct dentry *dentry)
@@ -2822,7 +2825,7 @@
 		return error;
 
 	inode_lock(d_inode(parent));
-	dentry = lookup_one_len(NULL_FILE_NAME, parent, strlen(NULL_FILE_NAME));
+	dentry = lookup_one(&nop_mnt_idmap, &QSTR_LEN(NULL_FILE_NAME, strlen(NULL_FILE_NAME)), parent);
 	if (IS_ERR(dentry)) {
 		error = PTR_ERR(dentry);
 		goto out;
diff -u a/security/apparmor/domain.c b/security/apparmor/domain.c
--- a/security/apparmor/domain.c	2025-10-03 08:45:21.349832507 +0000
+++ b/security/apparmor/domain.c	2025-10-03 09:32:01.438738638 +0000
@@ -523,7 +523,7 @@
 	/* TODO: move lookup parsing to unpack time so this is a straight
 	 *       index into the resultant label
 	 */
-	for (next = rules->file->trans.table[index]; next;
+	for (next = rules->file->trans.table[index].strs; next;
 	     next = next_name(xtype, next)) {
 		const char *lookup = (*next == '&') ? next + 1 : next;
 		*name = next;
diff -u a/security/apparmor/lib.c b/security/apparmor/lib.c
--- a/security/apparmor/lib.c	2025-10-03 08:45:21.349998716 +0000
+++ b/security/apparmor/lib.c	2025-10-03 09:31:33.343451394 +0000
@@ -130,8 +130,8 @@
 			return;
 
 		for (i = 0; i < t->size; i++)
-			kfree_sensitive(t->table[i]);
-		kfree_sensitive(t->table);
+			kfree_sensitive(t->table[i].strs);
+		kfree(t->table);
 		t->table = NULL;
 		t->size = 0;
 	}
diff -u a/security/apparmor/lsm.c b/security/apparmor/lsm.c
--- a/security/apparmor/lsm.c	2025-10-03 08:45:21.350068650 +0000
+++ b/security/apparmor/lsm.c	2025-10-03 09:33:22.515453375 +0000
@@ -141,11 +141,13 @@
 
 	cred = get_task_cred(child);
 	tracee = cred_label(cred);	/* ref count on cred */
-	tracer = __begin_current_label_crit_section();
+	bool needput = false;
+	tracer = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	error = aa_may_ptrace(current_cred(), tracer, cred, tracee,
 			(mode & PTRACE_MODE_READ) ? AA_PTRACE_READ
 						  : AA_PTRACE_TRACE);
-	__end_current_label_crit_section(tracer);
+	__end_current_label_crit_section(tracer, needput);
 	put_cred(cred);
 
 	return error;
@@ -157,13 +159,15 @@
 	const struct cred *cred;
 	int error;
 
-	tracee = __begin_current_label_crit_section();
+	bool needput = false;
+	tracee = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	cred = get_task_cred(parent);
 	tracer = cred_label(cred);	/* ref count on cred */
 	error = aa_may_ptrace(cred, tracer, current_cred(), tracee,
 			      AA_PTRACE_TRACE);
 	put_cred(cred);
-	__end_current_label_crit_section(tracee);
+	__end_current_label_crit_section(tracee, needput);
 
 	return error;
 }
@@ -232,11 +236,13 @@
 	struct aa_label *label;
 	int error = 0;
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	if (!unconfined(label))
 		error = aa_path_perm(op, current_cred(), label, path, 0, mask,
 				     cond, NULL);
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return error;
 }
@@ -709,9 +715,11 @@
 	if (file->f_path.dentry == aa_null.dentry)
 		return -EACCES;
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	error = aa_file_perm(op, current_cred(), label, file, mask, in_atomic);
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return error;
 }
@@ -875,11 +883,13 @@
 			  OP_URING_OVERRIDE);
 
 	ad.uring.target = cred_label(new);
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	error = fn_for_each(label, profile,
 			profile_uring(profile, AA_MAY_OVERRIDE_CRED,
 				      cred_label(new), CAP_SYS_ADMIN, &ad));
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return error;
 }
@@ -898,11 +908,13 @@
 	DEFINE_AUDIT_DATA(ad, LSM_AUDIT_DATA_NONE, AA_CLASS_IO_URING,
 			  OP_URING_SQPOLL);
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	error = fn_for_each(label, profile,
 			profile_uring(profile, AA_MAY_CREATE_SQPOLL,
 				      NULL, CAP_SYS_ADMIN, &ad));
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return error;
 }
@@ -920,7 +932,9 @@
 
 	flags &= ~AA_MS_IGNORE_MASK;
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	if (!unconfined(label)) {
 		if (flags & MS_REMOUNT)
 			error = aa_remount(current_cred(), label, path, flags,
@@ -939,7 +953,7 @@
 			error = aa_new_mount(current_cred(), label, dev_name,
 					     path, type, flags, data);
 	}
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return error;
 }
@@ -950,11 +964,13 @@
 	struct aa_label *label;
 	int error = 0;
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	if (!unconfined(label))
 		error = aa_move_mount(current_cred(), label, from_path,
 				      to_path);
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return error;
 }
@@ -964,10 +980,12 @@
 	struct aa_label *label;
 	int error = 0;
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	if (!unconfined(label))
 		error = aa_umount(current_cred(), label, mnt, flags);
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return error;
 }
@@ -1191,10 +1209,13 @@
 
 static void apparmor_current_getlsmprop_subj(struct lsm_prop *prop)
 {
-	struct aa_label *label = __begin_current_label_crit_section();
+	bool needput = false;
+	struct aa_label *label = __begin_current_label_crit_section(&needput);
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 
 	prop->apparmor.label = label;
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 }
 
 static void apparmor_task_getlsmprop_obj(struct task_struct *p,
@@ -1209,13 +1230,16 @@
 static int apparmor_task_setrlimit(struct task_struct *task,
 		unsigned int resource, struct rlimit *new_rlim)
 {
-	struct aa_label *label = __begin_current_label_crit_section();
+	bool needput = false;
+	struct aa_label *label = __begin_current_label_crit_section(&needput);
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	int error = 0;
 
 	if (!unconfined(label))
 		error = aa_task_setrlimit(current_cred(), label, task,
 					  resource, new_rlim);
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return error;
 }
@@ -1237,9 +1261,11 @@
 		error = aa_may_signal(cred, cl, tc, tl, sig);
 		aa_put_label(cl);
 	} else {
-		cl = __begin_current_label_crit_section();
+		bool needput = false;
+		cl = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 		error = aa_may_signal(current_cred(), cl, tc, tl, sig);
-		__end_current_label_crit_section(cl);
+		__end_current_label_crit_section(cl, needput);
 	}
 	aa_put_label(tl);
 	put_cred(tc);
@@ -1352,9 +1378,11 @@
 	struct aa_label *label;
 	int error;
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	error = unix_connect_perm(current_cred(), label, sk, peer_sk);
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	if (error)
 		return error;
@@ -1382,7 +1410,9 @@
 	struct aa_label *label;
 	int error;
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
+	__begin_current_label_crit_section(&needput);
 	error = xcheck(aa_unix_peer_perm(current_cred(),
 					 label, OP_SENDMSG, AA_MAY_SEND,
 					 sock->sk, peer->sk, NULL),
@@ -1390,7 +1420,7 @@
 					 peer_ctx->label, OP_SENDMSG,
 					 AA_MAY_RECEIVE,
 					 peer->sk, sock->sk, label));
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return error;
 }
diff -u a/security/apparmor/net.c b/security/apparmor/net.c
--- a/security/apparmor/net.c	2025-10-03 08:45:21.350251772 +0000
+++ b/security/apparmor/net.c	2025-10-03 09:09:50.938549263 +0000
@@ -156,8 +156,9 @@
 						unix_addr(ad->net.addr),
 						ad->net.addrlen);
 			else
-				audit_unix_sk_addr(ab, "peer_addr",
-						   ad->net.peer_sk);
+				audit_unix_addr(ab, "peer_addr",
+						ad->net.peer.addr,
+						ad->net.peer.addrlen);
 		}
 	}
 	if (ad->peer) {
diff -u a/security/apparmor/notify.c b/security/apparmor/notify.c
--- a/security/apparmor/notify.c	2025-10-03 08:45:21.350304052 +0000
+++ b/security/apparmor/notify.c	2025-10-03 09:09:50.938549263 +0000
@@ -1019,7 +1019,7 @@
 /* Handle the listener reading a notification into userspace */
 // TODO: output multiple messages in one recv
 long aa_listener_unotif_recv(struct aa_listener *listener, void __user *buf,
-			     u16 max_size)
+			     u16 max_size, u16 version)
 {
 	struct aa_knotif *knotif;
 	long ret;
diff -u a/security/apparmor/policy.c b/security/apparmor/policy.c
--- a/security/apparmor/policy.c	2025-10-03 08:45:21.350415055 +0000
+++ b/security/apparmor/policy.c	2025-10-03 09:32:46.265792494 +0000
@@ -895,9 +895,10 @@
 	struct aa_label *label;
 	bool res;
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
 	res = aa_policy_view_capable(current_cred(), label, ns);
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return res;
 }
@@ -907,9 +908,10 @@
 	struct aa_label *label;
 	bool res;
 
-	label = __begin_current_label_crit_section();
+	bool needput = false;
+	label = __begin_current_label_crit_section(&needput);
 	res = aa_policy_admin_capable(current_cred(), label, ns);
-	__end_current_label_crit_section(label);
+	__end_current_label_crit_section(label, needput);
 
 	return res;
 }
diff -u a/security/apparmor/policy_unpack.c b/security/apparmor/policy_unpack.c
--- a/security/apparmor/policy_unpack.c	2025-10-03 08:45:21.350516891 +0000
+++ b/security/apparmor/policy_unpack.c	2025-10-03 09:33:13.516041030 +0000
@@ -473,7 +473,7 @@
 static bool unpack_trans_table(struct aa_ext *e, struct aa_str_table *strs)
 {
 	void *saved_pos = e->pos;
-	char **table = NULL;
+	struct aa_str_table_ent *table = NULL;
 
 	/* exec table is optional */
 	if (aa_unpack_nameX(e, AA_STRUCT, "xtable")) {
@@ -488,7 +488,7 @@
 			 * for size check here
 			 */
 			goto fail;
-		table = kcalloc(size, sizeof(char *), GFP_KERNEL);
+		table = kcalloc(size, sizeof(struct aa_str_table_ent), GFP_KERNEL);
 		if (!table)
 			goto fail;
 
@@ -502,7 +502,7 @@
 			 */
 			if (!size2)
 				goto fail;
-			table[i] = str;
+			table[i].strs = str;
 			/* verify that name doesn't start with space */
 			if (isspace(*str))
 				goto fail;
